# Create a development Docker image
FROM python:3.11-slim-bullseye

WORKDIR /usr/src

# Install system dependencies
RUN apt-get update -yq \
    && export DEBIAN_FRONTEND=noninteractive \
    && apt-get upgrade -y \
    && apt-get dist-upgrade -y \
    && apt-get install -yq \
        curl \
        gnupg \
        software-properties-common \
        apt-transport-https \
        ca-certificates \
        lsb-release \
        unzip \
        less \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js 18.x LTS
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -yq nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Terraform
RUN curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg \
    && echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list > /dev/null \
    && apt-get update -yq \
    && apt-get install -yq terraform \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Docker is used to create the Dev container: create Localstack image from outside VS Code # Install Docker CLI and Docker Compose
# RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
#     && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
#     && apt-get update \
#     && apt-get install -y docker-ce-cli \
#     && curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
#     && chmod +x /usr/local/bin/docker-compose \
#     && apt-get clean \
#     && rm -rf /var/lib/apt/lists/*

# Install AWS CLI v2
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
    && unzip awscliv2.zip \
    && ./aws/install \
    && rm -rf awscliv2.zip ./aws

# Install Yarn and Serverless
RUN npm install -g yarn \
    && yarn global add serverless

# Default dummy AWS credentials to interact with localstack
ENV AWS_ACCESS_KEY_ID=dummyaccesskey
ENV AWS_SECRET_ACCESS_KEY=dummysecretkey
ENV AWS_DEFAULT_REGION=us-east-1
ENV AWS_DEFAULT_OUTPUT=json

# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE=1
# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1

# Create and activate virtual environment
RUN python3 -m venv /usr/src/venv
ENV PATH="/usr/src/venv/bin:$PATH"

# Copy requirements and install dependencies
COPY ./requirements.txt ./
RUN /usr/src/venv/bin/pip install --no-cache-dir -r requirements.txt

EXPOSE 3000

# Set the entrypoint
CMD ["python3", "localstack/setup.py"]